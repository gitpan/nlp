%!PS-Adobe-2.0
%%Creator: dvipsk 5.528a Copyright 1986, 1994 Radical Eye Software
%%Title: input.dvi
%%Pages: 2 0
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%EndComments
%%BeginProcSet: PStoPS 1 13
userdict begin
[/showpage/erasepage/copypage]{dup where{pop dup load
 type/operatortype eq{1 array cvx dup 0 3 index cvx put
 bind def}{pop}ifelse}{pop}ifelse}forall
[/letter/legal/executivepage/a4/a4small/b5/com10envelope
 /monarchenvelope/c5envelope/dlenvelope/lettersmall/note
 /folio/quarto/a5]{dup where{dup wcheck{exch{}put}
 {pop{}def}ifelse}{pop}ifelse}forall
/PStoPSmatrix matrix currentmatrix def
/PStoPSxform matrix def/PStoPSclip{clippath}def
/defaultmatrix{PStoPSmatrix exch PStoPSxform exch concatmatrix}bind def
/initmatrix{matrix defaultmatrix setmatrix}bind def
/initclip[{matrix currentmatrix PStoPSmatrix setmatrix
 [{currentpoint}stopped{$error/newerror false put{newpath}}
 {/newpath cvx 3 1 roll/moveto cvx 4 array astore cvx}ifelse]
 {[/newpath cvx{/moveto cvx}{/lineto cvx}
 {/curveto cvx}{/closepath cvx}pathforall]cvx exch pop}
 stopped{$error/errorname get/invalidaccess eq{cleartomark
 $error/newerror false put cvx exec}{stop}ifelse}if}bind aload pop
 /initclip dup load dup type dup/operatortype eq{pop exch pop}
 {dup/arraytype eq exch/packedarraytype eq or
  {dup xcheck{exch pop aload pop}{pop cvx}ifelse}
  {pop cvx}ifelse}ifelse
 {newpath PStoPSclip clip newpath exec setmatrix} bind aload pop]cvx def
/initgraphics{initmatrix newpath initclip 1 setlinewidth
 0 setlinecap 0 setlinejoin []0 setdash 0 setgray
 10 setmiterlimit}bind def
end
%%EndProcSet
%DVIPSCommandLine: dvips input.dvi
%DVIPSParameters: dpi=300, compressed, comments removed
%DVIPSSource:  TeX output 1996.01.09:2246
%%BeginProcSet: texc.pro
/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR matrix currentmatrix dup dup 4 get round 4 exch put dup dup 5 get
round 5 exch put setmatrix}N /@landscape{/isls true N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0
0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn
begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X
array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo
setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx
FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{
pop nn dup definefont setfont}B /ch-width{ch-data dup length 5 sub get}
B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{128 ch-data dup
length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127 sub}B
/ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data dup type
/stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N /rc 0 N /gp
0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup /base get 2
index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff
ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]/id
ch-image N /rw ch-width 7 add 8 idiv string N /rc 0 N /gp 0 N /cp 0 N{
rc 0 ne{rc 1 sub /rc X rw}{G}ifelse}imagemask restore}B /G{{id gp get
/gp gp 1 add N dup 18 mod S 18 idiv pl S get exec}loop}B /adv{cp add /cp
X}B /chg{rw cp id gp 4 index getinterval putinterval dup gp add /gp X
adv}B /nd{/cp 0 N rw exit}B /lsh{rw cp 2 copy get dup 0 eq{pop 1}{dup
255 eq{pop 254}{dup dup add 255 and S 1 and or}ifelse}ifelse put 1 adv}
B /rsh{rw cp 2 copy get dup 0 eq{pop 128}{dup 255 eq{pop 127}{dup 2 idiv
S 128 and or}ifelse}ifelse put 1 adv}B /clr{rw cp 2 index string
putinterval adv}B /set{rw cp fillstr 0 4 index getinterval putinterval
adv}B /fillstr 18 string 0 1 17{2 copy 255 put pop}for N /pl[{adv 1 chg}
{adv 1 chg nd}{1 add chg}{1 add chg nd}{adv lsh}{adv lsh nd}{adv rsh}{
adv rsh nd}{1 add adv}{/rc X nd}{1 add set}{1 add clr}{adv 2 chg}{adv 2
chg nd}{pop nd}]dup{bind pop}forall N /D{/cc X dup type /stringtype ne{]
}if nn /base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup
length 1 sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{
cc 1 add D}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin
0 0 moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul
add .99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 -.1 TR 1 1 scale rulex ruley
false RMat{BDot}imagemask grestore}}{{gsave TR -.1 -.1 TR rulex ruley
scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave
transform round exch round exch itransform moveto rulex 0 rlineto 0
ruley neg rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta
0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}
B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{
3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p
-1 w}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{
3 2 roll p a}B /bos{/SS save N}B /eos{SS restore}B end
%%EndProcSet
TeXDict begin 39158280 55380996 1000 300 300 (input.dvi)
@start /Fa 4 53 df<5A1207123F12C71207B3A5EAFFF80D1C7C9B15>49
D<EA07C0EA1830EA201CEA400C130EEAF00F12F81307A21270EA000F130EA2131CA21338
1370136013C0EA0180EA0300EA0601120C1218EA1002EA3FFE127F12FF101C7E9B15>I<
EA07E0EA1830EA201CA2EA781E130E131E1238EA001CA2131813301360EA07C0EA003013
1CA2130E130FA2127012F8A3EAF00EEA401C1220EA1830EA07C0101D7E9B15>I<130CA2
131C133CA2135C13DC139CEA011C120312021204120C1208121012301220124012C0B512
C038001C00A73801FFC0121C7F9B15>I E /Fb 28 123 df<121FEA3F80EA7FC0EAFFE0
A5EA7FC0EA3F80EA1F000B0B778A1D>46 D<003FBAFCA3903BF8000FFE000701C06D4813
0090C7163F007EF01F80007C180FA200781807A300701803A500F019C0481801A5C893C7
FCB3B3A64B7E92383FFF800103B712F8A342467CC54B>84 D<EB03FE90383FFFC09038FC
03F03901E000FCD80380137E48C77E486C6D7E01E080001F140F6D80A26F7E6C5AA2EA03
80C8FCA4EC01FF147F903803FF8790381FF007EB7F803801FE00EA03F8485A485A485A12
3F5B007F161CA248C7FCA3150FA36C6C131B15336C6C903831F838001F14613B0FF001C0
FC703B03FC0780FFE03B00FFFE003FC0D90FF8EB1F802E2F7CAD34>97
D<13FE12FFA3120312011200B3A315FF020713E091381F01FC913838007E4AEB1F8002C0
6D7E6D486D7E707E91C77F496E7EA2707EA283A2EF7F80A318C0AA1880A217FF1800A25F
16015F5F6D4A5A6E130701FD5DD9F9C0EB0F80D9F8E0013FC7FCD9F078137E91381E03F8
9039E00FFFE090260001FEC8FC32497DC739>I<EC3FE0903801FFFE903907E01F809039
1F8003C0013EC712E001FC1470484814F8000314034914FC00071407485A121F49EB03F8
123FED00E01600127F5BA212FFAA127FA27F123F160E121F7F000F151C7F000715386C7E
000115706C6C14E0017EEB01C090391F80078090390FE03E00903801FFFC9038003FE027
2F7DAD2E>I<EE1FC0ED1FFFA3ED007F163F161FB3A3EC1FE0903801FFFC903807F01E90
391F80079F90393F0001DF017CEB00FF4848147F0003153F5B4848141F120F121F5B123F
A2127F5BA212FFAA127FA36C7EA2121FA26C7E163F6C7E0003157F6C6C14FF6C6C903801
DFE0017E9038039FF0903B1F800F1FFFC090380FE03E903801FFF89026003FC0EBC00032
497DC739>I<EC7F80903803FFF090380FC0FC90383F003F017CEB1F8049EB0FC00001EC
07E0485A4848EB03F0000F15F8A24848EB01FCA2123FA2484814FE1500A212FFA290B6FC
A20180C8FCA6127FA37F123F160E121F7F000F151C12076D1438000315706C7E6C6C14E0
013EEB03C090391F800700903807E03E903801FFF89038003FC0272F7DAD2E>I<EC07F0
EC3FFCEC7C0E903801F81F903903F03F80903907E07FC0EB0FC0A2EB1F80013FEB3F80ED
1F00EC000E4990C7FCB1B612E0A3C66CC8FCB3B28048487E007FEBFFC0A322497DC820>
I<49B4EB03F0010F9038E01FFC903A1F83F07C3E903A7E00FDE07E01F8EB3F800001ED00
3C484890381F80180007EDC000A248486D7EA2001F81A7000F5DA26C6C495AA200035D6C
6C49C7FC0000143ED801FE13FC90389F83F039030FFFE0010190C8FC48CAFCA67F7F7F6C
B512FEEDFFE06C15F86C15FE6D8048B712802703E0000113C0D80F809038003FE048C812
0F003EED03F0003C1501007C16F80078150012F8A5007CED01F0A26CED03E0001E16C06C
ED0780D807C0EC1F006C6C143ED800FCEB01F890393F800FE0010FB51280010001F8C7FC
2F437DAC34>I<13FE12FFA3120312011200B3A3ED7F80913803FFF091380781F891380C
007C4A137E4A7F4A804A131F6D5A8391C7FCA35BB3AA2603FF80EB7FF0B5D8FE1FB512C0
A332487CC739>I<EA01F0487E487E487EA56C5A6C5A6C5AC8FCAE13FE127FA312031201
1200B3B1EA03FFB512FCA316467DC51C>I<147C14FE497E491380A56D13006D5A147C91
C7FCAEEC7F80EB7FFFA31300147F143FB3B3AC123E007F1400EAFF80147EA2147C387F00
FC007E5B383801F0381F03C03807FF80D801FEC7FC195B84C520>I<13FE12FFA3120312
011200B3A492381FFFFEA3030713E06F90C7FCED01FC16F04B5A5E4B5A030EC8FC5D1578
5D4A5A4A5A14074A7E141F4A7EECF3F89038FFE1FC14C1EC80FEEC007F497F49806F7E6F
7EA26F7E6F7E1501826F7E167FA2707E8383D803FFEC7FF8B5D8FC03B512C0A332487DC7
37>I<13FE12FFA3120312011200B3B3B3A83803FF80B512FEA317487DC71C>I<D801FCD9
7FC0EB07FC00FF902601FFF890381FFF8091260780FC9038780FC091260E003E9038E003
E00003011890263F01807F000149903A1F830001F800004902C6804A14CCD9FD80D90FD8
130005F88001FFC75BA3495DB3AA2603FF80D93FF8903803FF80B5D8FE0FB500E0B512FE
A34F2D7CAC56>I<D801FCEB7F8000FF903803FFF091380781F891380C007C000349137E
0001497F000049804A131FEBFD808301FFC7FCA35BB3AA2603FF80EB7FF0B5D8FE1FB512
C0A3322D7CAC39>I<EC3FE0903801FFFC903807E03F90391F800FC090397E0003F0496D
7E48486D7E4848147E0007157F4980000F16804848EC1FC0A2003F16E0A249140F007F16
F0A300FF16F8AA007F16F0A36C6CEC1FE0A3001F16C06C6CEC3F80A26C6CEC7F00000315
7E6C6C5C6C6C495A017E495A90391F800FC090390FE03F80902603FFFEC7FC9038003FE0
2D2F7DAD34>I<01FE13FF00FF010713E091381F01FC913838007E0003496D7E000101C0
6D7E6C6C486D7E707E91C77F496E7E160183A2707EA21880A2177F18C0AA188017FFA218
00A24C5AA24C5A5F6D4A5A804C5A6EEB1F80496C49C7FC027813FE91381E03F891380FFF
E0DA01FEC8FC91CAFCAF3803FF80B512FEA332417DAC39>I<DA1FE013E09138FFFC0190
3807F01E90391FC0038190393F0001C3017EEB00E3491467000115374848143F4848141F
120F485A160F123F5B127FA25B12FFAA127F7FA2123FA26C7EA26C6C141F12076D143F12
036C6C146F6C6C14CF013FEB018F90391F80070F903807F03E903801FFF89038003FE091
C7FCAFEE3FF8030FB512E0A333417DAC37>I<3901FC01FC00FFEB07FF91380E0F809138
181FC000039038303FE000011360000013C0A29039FD801FC0ED0F80ED070001FFC8FCA4
5BB3A77F00037FB67EA3232D7EAC28>I<90381FF80690B5120E3903F0079E39078001FE
000EC7127E5A003C143E48141EA212F8150EA27EA27E7ED87FC090C7FC13FC383FFFE06C
13FE6C6D7E6C14E06C80C614FC011F7F13019038000FFF02011380EC007F0060EC1FC012
E0150F7E1507A37E16807EED0F007E6C141E6D5BD8F9E05B39F0F803E039E03FFFC026C0
07FCC7FC222F7DAD29>I<130EA7131EA4133EA3137EA213FE120112031207001FB512FC
B6FCA2C648C7FCB3A4150EAB017E131C137F7F151890381F803890380FC070903807E0E0
903801FFC09038007F001F417EBF28>I<01FEEC1FC000FFEC1FFFA30003EC007F000115
3F0000151FB3A9163FA3167F137EA26D14DF9238019FE06D9038031FF090260F8006EBFF
C0903807F01C903801FFF89026003FE0EBC000322E7CAC39>I<B500F890387FFFC0A300
07018090380FFE00D801FEC7EA07F80000ED03E05F7F6D5DA26D6C49C7FCA26E5B011F14
0EA26D6C5BA26E133C01071438A26D6C5BA26E13F001015CA26D6C485AA2ECFF03027F5B
A2DA3F87C8FCA215CFEC1FCEA2EC0FFCA36E5AA26E5AA36E5AA2322D7EAB37>I<B53CF0
3FFFF807FFFCA30007D90001D9800013E06C486D90C7EA7F806C48027EEC3F00191E6C6C
147F191CA2017F4A6C5BA36D6C486D5B16CF19F090261FC0036D5B1687180190280FE007
03F05BA202F01503010790260E01F85BA202F81507010390261C00FC90C7FCA202FC5D01
0149EB7E0EA2902600FE78EB7F1C0370133FA2DA7FF014B84B131FA2023F15F04B130FA2
021F5D4B1307A2020F5D92C71203A2462D7EAB4B>I<267FFFF890B512C0A3000101E090
387FFC006C6C48EB3FE0013FEC1F80011F92C7FC6E131E6D6C5B01075C6D6C5B6E5B9038
01FE010100495A91387F0780DA3F8FC8FC15CEEC1FDEEC0FFC6E5AA26E7E14014A7E4A7E
4A6C7EEC0E3F91381E1FC04A6C7E02787F4A6C7EECE00301016D7ED903C07F49486C7E49
C77E707E496E7E017F81484881000F6DEB7FFCB5D8E001B512F0A3342C7FAB37>I<B500
F890387FFFC0A30003018090381FFE006C48C7EA07F80000ED03E05F7F6D5D6E1307013F
92C7FCA26D6C130EA26E131E010F141CA26D6C5BA26E137801031470A26D6C5BA2ECFE01
01005CA291387F0380A21587023F90C8FC15CFEC1FCEA215FE6E5AA26E5AA26E5AA36E5A
A25DA214035DA24AC9FCA25C140E003C131E007E131CB4FC5C14781470485B387C01C038
380380D81E0FCAFCEA0FFEEA03F832417EAB37>I<003FB612F8A29039F00007F00180EB
0FE0003EC7121F003C15C0ED3F800038147F0078ECFF005D4A5A007013035D4A5A140F4A
5AC75B4A5A147F92C7FC14FE1301495A5C495A010F141C5C495A133F4948133C91C71238
13FE12015B484814781207485A4914F848481301003FEC03F049130F48C7127FB7FCA226
2C7DAB2E>I E end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 300dpi
TeXDict begin
%%PaperSize: a4

userdict/PStoPSxform PStoPSmatrix matrix currentmatrix
 matrix invertmatrix matrix concatmatrix
 matrix invertmatrix put
%%EndSetup
%%Page: (0,1) 1
userdict/PStoPSsaved save put
PStoPSmatrix setmatrix
595.275591 0.000000 translate
90 rotate
0.700000 dup scale
userdict/PStoPSmatrix matrix currentmatrix put
userdict/PStoPSclip{0 0 moveto
 595.000000 0 rlineto 0 842.000000 rlineto -595.000000 0 rlineto
 closepath}put initclip
gsave clippath 0 setgray 1.000000 setlinewidth stroke grestore
/showpage{}def/copypage{}def/erasepage{}def
PStoPSxform concat
1 0 bop 75 225 a Fb(The)34 b(quic)m(k)h(bro)m(wn)g(fo)m(x)75
350 y(jumps)g(o)m(v)m(er)f(the)h(lazy)f(dog.)490 516
y(The)g(quic)m(k)h(bro)m(wn)g(fo)m(x)401 640 y(jumps)f(o)m(v)m(er)g
(the)h(lazy)f(dog.)905 806 y(The)g(quic)m(k)h(bro)m(wn)g(fo)m(x)726
931 y(jumps)g(o)m(v)m(er)f(the)h(lazy)f(dog.)75 2068
y(The)g(quic)m(k)h(bro)m(wn)g(fo)m(x)75 2192 y(jumps)g(o)m(v)m(er)f
(the)h(lazy)f(dog.)490 2358 y(The)g(quic)m(k)h(bro)m(wn)g(fo)m(x)401
2483 y(jumps)f(o)m(v)m(er)g(the)h(lazy)f(dog.)905 2649
y(The)g(quic)m(k)h(bro)m(wn)g(fo)m(x)726 2774 y(jumps)g(o)m(v)m(er)f
(the)h(lazy)f(dog.)946 2960 y Fa(1)p eop
PStoPSsaved restore
userdict/PStoPSsaved save put
PStoPSmatrix setmatrix
595.275591 420.944882 translate
90 rotate
0.700000 dup scale
userdict/PStoPSmatrix matrix currentmatrix put
userdict/PStoPSclip{0 0 moveto
 595.000000 0 rlineto 0 842.000000 rlineto -595.000000 0 rlineto
 closepath}put initclip
gsave clippath 0 setgray 1.000000 setlinewidth stroke grestore
PStoPSxform concat
2 1 bop 75 225 a Fb(The)34 b(quic)m(k)h(bro)m(wn)g(fo)m(x)75
350 y(jumps)g(o)m(v)m(er)f(the)h(lazy)f(dog.)490 516
y(The)g(quic)m(k)h(bro)m(wn)g(fo)m(x)401 640 y(jumps)f(o)m(v)m(er)g
(the)h(lazy)f(dog.)905 806 y(The)g(quic)m(k)h(bro)m(wn)g(fo)m(x)726
931 y(jumps)g(o)m(v)m(er)f(the)h(lazy)f(dog.)75 2068
y(The)g(quic)m(k)h(bro)m(wn)g(fo)m(x)75 2192 y(jumps)g(o)m(v)m(er)f
(the)h(lazy)f(dog.)490 2358 y(The)g(quic)m(k)h(bro)m(wn)g(fo)m(x)401
2483 y(jumps)f(o)m(v)m(er)g(the)h(lazy)f(dog.)905 2649
y(The)g(quic)m(k)h(bro)m(wn)g(fo)m(x)726 2774 y(jumps)g(o)m(v)m(er)f
(the)h(lazy)f(dog.)946 2960 y Fa(2)p eop
PStoPSsaved restore
%%Page: (2,3) 2
userdict/PStoPSsaved save put
PStoPSmatrix setmatrix
595.275591 0.000000 translate
90 rotate
0.700000 dup scale
userdict/PStoPSmatrix matrix currentmatrix put
userdict/PStoPSclip{0 0 moveto
 595.000000 0 rlineto 0 842.000000 rlineto -595.000000 0 rlineto
 closepath}put initclip
gsave clippath 0 setgray 1.000000 setlinewidth stroke grestore
/showpage{}def/copypage{}def/erasepage{}def
PStoPSxform concat
3 2 bop 75 225 a Fb(The)34 b(quic)m(k)h(bro)m(wn)g(fo)m(x)75
350 y(jumps)g(o)m(v)m(er)f(the)h(lazy)f(dog.)490 516
y(The)g(quic)m(k)h(bro)m(wn)g(fo)m(x)401 640 y(jumps)f(o)m(v)m(er)g
(the)h(lazy)f(dog.)905 806 y(The)g(quic)m(k)h(bro)m(wn)g(fo)m(x)726
931 y(jumps)g(o)m(v)m(er)f(the)h(lazy)f(dog.)75 2068
y(The)g(quic)m(k)h(bro)m(wn)g(fo)m(x)75 2192 y(jumps)g(o)m(v)m(er)f
(the)h(lazy)f(dog.)490 2358 y(The)g(quic)m(k)h(bro)m(wn)g(fo)m(x)401
2483 y(jumps)f(o)m(v)m(er)g(the)h(lazy)f(dog.)905 2649
y(The)g(quic)m(k)h(bro)m(wn)g(fo)m(x)726 2774 y(jumps)g(o)m(v)m(er)f
(the)h(lazy)f(dog.)946 2960 y Fa(3)p eop
PStoPSsaved restore
userdict/PStoPSsaved save put
PStoPSmatrix setmatrix
595.275591 420.944882 translate
90 rotate
0.700000 dup scale
userdict/PStoPSmatrix matrix currentmatrix put
userdict/PStoPSclip{0 0 moveto
 595.000000 0 rlineto 0 842.000000 rlineto -595.000000 0 rlineto
 closepath}put initclip
gsave clippath 0 setgray 1.000000 setlinewidth stroke grestore
PStoPSxform concat
4 3 bop 75 225 a Fb(The)34 b(quic)m(k)h(bro)m(wn)g(fo)m(x)75
350 y(jumps)g(o)m(v)m(er)f(the)h(lazy)f(dog.)490 516
y(The)g(quic)m(k)h(bro)m(wn)g(fo)m(x)401 640 y(jumps)f(o)m(v)m(er)g
(the)h(lazy)f(dog.)905 806 y(The)g(quic)m(k)h(bro)m(wn)g(fo)m(x)726
931 y(jumps)g(o)m(v)m(er)f(the)h(lazy)f(dog.)75 2068
y(The)g(quic)m(k)h(bro)m(wn)g(fo)m(x)75 2192 y(jumps)g(o)m(v)m(er)f
(the)h(lazy)f(dog.)490 2358 y(The)g(quic)m(k)h(bro)m(wn)g(fo)m(x)401
2483 y(jumps)f(o)m(v)m(er)g(the)h(lazy)f(dog.)905 2649
y(The)g(quic)m(k)h(bro)m(wn)g(fo)m(x)726 2774 y(jumps)g(o)m(v)m(er)f
(the)h(lazy)f(dog.)946 2960 y Fa(4)p eop
PStoPSsaved restore
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
